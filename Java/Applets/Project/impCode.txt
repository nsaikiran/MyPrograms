::	SAMPLE CODE ::

::	CODE FOR TICKET GENERATION ::

else if (action.getSource() == bookthese) {
			String movie = movieChoice.getSelectedItem();
			String theatre = theatreChoice.getSelectedItem();
			String show = showChoice.getSelectedItem();
			String showtable="";
			if (show.equals("Morning Show"))		showtable = "morningshow";
			else if ( show.equals("Matinee Show")) 	showtable = "matineeshow";
			else if ( show.equals("First Show"))	showtable = "firstshow";
			else if ( show.equals("Second Show"))	showtable = "secondshow";
			
			try{
				Enumeration e = seatsobj.vec.elements();
				int temp;
				String reservation=" ";
				int count = 0;
				while (e.hasMoreElements()){
					temp=((Integer)e.nextElement()).intValue();
					reservation+=temp;
					reservation+=",";
					st.executeUpdate("insert into "+showtable+" values('"+theatre+"',"+temp+")");
					count++;
				}
				seatsobj.clear();
				dummy.removeAll();
				String amount=" ";
				try {
					rs=st.executeQuery("select cost from movies where theatre='"+theatre+"'");
					rs.next();
					amount	=	 rs.getString("cost");
					}
				catch(Exception ef){ System.out.println("Error");}
				
				Panel ticket	= new Panel(new BorderLayout());
				Label title 	= new Label("e-Ticket",Label.CENTER);
				title.setFont(new Font("Serif",Font.PLAIN,12));
				
				Panel details	= new Panel(new FlowLayout());
				
				Panel one		= new Panel(new GridLayout(6,1));
				Panel moviex	= new Panel(new BorderLayout());
				
				moviex.add(new Label("Movie:",Label.LEFT),BorderLayout.WEST);
				moviex.add(new Label(movie,Label.RIGHT),BorderLayout.EAST);
				
				Panel theatrex	= new Panel(new BorderLayout());
				theatrex.add(new Label("Theatre:",Label.LEFT),BorderLayout.WEST);
				theatrex.add(new Label(theatre,Label.RIGHT),BorderLayout.EAST);
				
				Panel showx		= new Panel(new BorderLayout());
				showx.add(new Label("Show:",Label.LEFT),BorderLayout.WEST);
				showx.add(new Label(show,Label.RIGHT),BorderLayout.EAST);
				
				Panel seatsx	= new Panel(new BorderLayout());
				Label res		= new Label(reservation,Label.RIGHT);
				res.setFont(new Font("Serif",Font.PLAIN,20));
				seatsx.add(new Label("Seats:",Label.LEFT),BorderLayout.WEST);
				seatsx.add(res,BorderLayout.EAST);
				
				Panel costx		= new Panel(new BorderLayout());
				costx.add(new Label("Cost:",Label.LEFT),BorderLayout.WEST);
				
				Panel rate		= new Panel(new GridLayout(2,1));
				
				Panel cost2		= new Panel(new FlowLayout());
				Label totalcost	= new Label(amount,Label.RIGHT);
				cost2.add(totalcost);
				cost2.add(new Label(" x "+((Integer)count).toString()));
				rate.add(cost2);
				
				Integer x 		= (Integer)count * (Integer.parseInt(amount));
				Label tcost		= new Label("Rs: "+x.toString(),Label.LEFT);
				tcost.setFont(new Font("Serif",Font.PLAIN,20));
				rate.add(tcost);
				costx.add(rate,BorderLayout.EAST);
				
				one.add(moviex);
				one.add(theatrex);
				one.add(showx);
				one.add(seatsx);
				one.add(costx);
				Label tc		= new Label("**Generated by MovieTicketBookingSystem**");
				tc.setFont(new Font("Serif",Font.PLAIN,10));
				java.util.Date d = new java.util.Date();
				Label tc2		= new Label("Date: "+d.toString());
				tc2.setFont(new Font("Serif",Font.PLAIN,11));
				Panel tcp	 	= new Panel(new GridLayout(3,1));
				tcp.add(tc);
				tcp.add(tc2);
				one.add(tcp);
				
				String[] o = d.toString().split(" ");
				String id="";
				for (int i=0;i<o.length;++i)
					id+=o[i];
				
				Label idl		= new Label("ticket id: "+id,Label.CENTER);
				idl.setFont(new Font("Serif",Font.PLAIN,9));
				tcp.add(idl);
				details.setBackground(Color.white);
				details.add(one);
				
				try{
					st.executeUpdate("insert into ticket values('"+currentUser+"','"+id+"')");
				}
				catch(Exception efg){System.out.println("unable to write id");}
				
				dummy.add(title,BorderLayout.NORTH);
				dummy.add(details,BorderLayout.CENTER);
				validate();
			}
			catch(Exception e){System.out.println("unable to "+e);}
			
		}
		
::	END SAMPLE CODE FOR TICKET GENERATION ::

::	SAMPLE CODE FOR THEATRE SEAT VIEW GENERATION ::
else if (event.getSource() == showChoice){
			String movie = movieChoice.getSelectedItem();
			String theatre = theatreChoice.getSelectedItem();
			String show = showChoice.getSelectedItem();
			String showtable="";
			if (show.equals("Morning Show"))		showtable = "morningshow";
			else if ( show.equals("Matinee Show")) 	showtable = "matineeshow";
			else if ( show.equals("First Show"))	showtable = "firstshow";
			else if ( show.equals("Second Show"))	showtable = "secondshow";
			
			seatsobj.clear();
			seatPanel.removeAll();
			
			try {
				rs=st.executeQuery("select rows,cols from theatre where name='"+theatre+"'");
				int r=0,c=0;
				while (rs.next()){
					r =Integer.parseInt(rs.getString("rows"));
					c =Integer.parseInt(rs.getString("cols"));
				}
				
				Panel p = new Panel(new GridLayout(r,c));
				Button t;
				int sum=0;
				for (int i=0;i<r;++i)
					for (int j=0;j<c;++j){
						++sum;
						t=new Button( ((Integer)sum).toString());
						t.addActionListener(seatsobj);
						p.add(t);
						}
				try {
					rs=st.executeQuery("select seat from "+showtable+" where theatre='"+theatre+"'");
					while (rs.next()){
						((Button)p.getComponent(Integer.parseInt(rs.getString("seat"))-1)).setVisible(false);
					}
				}
				catch(Exception a){}
				seatPanel.add(p);
				seatPanel.add(bookthese);
				dummy.add(seatPanel,BorderLayout.SOUTH);
				validate();
			}
			catch ( Exception e){
			System.out.print("look out error");	
			}
		}

::	END SAMPLE CODE FOR THEATRE SEAT VIEW


::	USING ANOTHER CLASS AS ACTION LISTENER OF SEAT BUTTONS
class Seats implements ActionListener {
	Vector<Integer> vec=new Vector<Integer>();
	public void actionPerformed(ActionEvent e){
		((Button)e.getSource()).setBackground(Color.blue);
		vec.add(Integer.parseInt(e.getActionCommand()));
	}
	public void clear(){
		vec= new Vector<Integer>();
	}
}
::	END SAMPLE CODE FOR ACTION LISTENER OF SEAT BUTTONS
